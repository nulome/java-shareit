
drop table IF EXISTS users, items_request, items, booking_statuses, bookings;

create TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  email varchar(55) UNIQUE NOT NULL
);

create TABLE IF NOT EXISTS items_request (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description varchar(255),
  requestor integer NOT NULL,
  created timestamp NOT NULL,
  CONSTRAINT items_request_requestor FOREIGN KEY (requestor) REFERENCES users(id) ON delete CASCADE
);

create TABLE IF NOT EXISTS items (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar(255) NOT NULL,
  description varchar(255),
  available varchar(10) NOT NULL,
  owner_id integer NOT NULL,
  request_id integer,
  CONSTRAINT items_owner_id FOREIGN KEY (owner_id) REFERENCES users(id) ON delete CASCADE,
  CONSTRAINT items_request_id FOREIGN KEY (request_id) REFERENCES items_request(id) ON delete CASCADE
);

create TABLE IF NOT EXISTS booking_statuses (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  status varchar(55) NOT NULL
);

create TABLE IF NOT EXISTS bookings (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start_time timestamp NOT NULL,
  end_time timestamp NOT NULL,
  item_id integer NOT NULL,
  booker_id integer NOT NULL,
  status_id integer NOT NULL,
  CONSTRAINT bookings_item_id FOREIGN KEY (item_id) REFERENCES items(id) ON delete CASCADE,
  CONSTRAINT bookings_booker_id FOREIGN KEY (booker_id) REFERENCES users(id) ON delete CASCADE,
  CONSTRAINT bookings_status_id FOREIGN KEY (status_id) REFERENCES booking_statuses(id) ON delete CASCADE
);

